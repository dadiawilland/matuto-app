{"ast":null,"code":"var _jsxFileName = \"/Users/willanddadia/Documents/matuto/matuto-app/src/components/Register/PaymentInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from \"react-hook-form\";\nimport styles from './PaymentInfo.style';\nimport ProcessButton from '../Buttons/ProcessButton';\nimport PaymentButton from '../Buttons/PaymentButton';\nimport TextInput from '../TextInput/TextInput';\nimport { useLocation } from \"react-router-dom\";\nimport { FORM_FIELDS } from '../../constants/formConstants';\nimport { registerAccountAction } from '../../actions/accountActions';\nimport Register from './Register';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentInfo = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    formState: {\n      errors\n    },\n    handleSubmit,\n    control,\n    getValues\n  } = useForm({\n    mode: 'onSubmit',\n    reValidateMode: 'onSubmit'\n  });\n  const history = useHistory();\n\n  const onSubmit = (data, e) => {\n    // data.paymentInfoType = 1;\n    // dispatch(registerAccountAction({\n    //     account: location.state.account,\n    //     paymentInfo: data,\n    // }));\n    register(location.state.account);\n  };\n\n  const register = request => {\n    const endPoint = 'https://matuto-api.herokuapp.com/api/account/';\n    return fetch(endPoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    }).then(response => {\n      const status = response.status;\n      const data = response.json();\n      return Promise.all([status, data]).then(res => ({\n        status: res[0],\n        data: res[1]\n      }));\n    }).catch(error => {\n      history.push('/on-boarding');\n      console.log(error);\n    });\n  };\n\n  const onError = (data, e) => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles().containerForm,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: styles().formTitleFont,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: styles().paymentTitleFont,\n      children: \"Payment Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles().containerPaymentBtnRow,\n      children: [/*#__PURE__*/_jsxDEV(PaymentButton, {\n        src: 'icon-creditcard.png',\n        text: 'Creditcard',\n        style: styles().containerPaymentBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PaymentButton, {\n        src: 'icon-gcash.png',\n        text: 'GCash',\n        style: styles().containerPaymentBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles().containerInputFields,\n      children: FORM_FIELDS.PAYMENT_INFO.map((formfield, i) => {\n        if (formfield.subFields) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles().containerInputFieldRow,\n            children: formfield.subFields.map((subFormField, ii) => {\n              return /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: subFormField.name,\n                rules: subFormField.validators,\n                defaultValue: \"\",\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(TextInput, {\n                  onChange: onChange,\n                  val: value,\n                  style: { ...styles().containerInputField,\n                    ...styles().containerInputFieldSml\n                  },\n                  type: subFormField.type,\n                  name: subFormField.name,\n                  label: subFormField.label,\n                  error: errors[subFormField.name]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 49\n                }, this)\n              }, ii, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: formfield.name,\n            rules: formfield.validators,\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => /*#__PURE__*/_jsxDEV(TextInput, {\n              onChange: onChange,\n              val: value,\n              style: { ...styles().containerInputField\n              },\n              type: formfield.type,\n              name: formfield.name,\n              label: formfield.label,\n              error: errors[formfield.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), props.isRegistration ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles().containerPriceField,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles().priceFieldFont,\n        children: [\"Total Amount:\", '\\u00A0', \" 1,123 php\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(ProcessButton, {\n      onClick: handleSubmit(onSubmit, onError),\n      style: {\n        paddingTop: 11\n      },\n      isNav: false,\n      btnLabel: \"Submit\",\n      style: styles().containerButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentInfo, \"IEkJt/ahc8SFE3wV7PTidCBWbyU=\", false, function () {\n  return [useDispatch, useLocation, useForm, useHistory];\n});\n\n_c = PaymentInfo;\nexport default PaymentInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentInfo\");","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/components/Register/PaymentInfo.js"],"names":["React","useEffect","useSelector","useDispatch","useForm","Controller","styles","ProcessButton","PaymentButton","TextInput","useLocation","FORM_FIELDS","registerAccountAction","Register","useHistory","PaymentInfo","props","dispatch","location","formState","errors","handleSubmit","control","getValues","mode","reValidateMode","history","onSubmit","data","e","register","state","account","request","endPoint","fetch","method","headers","body","JSON","stringify","then","response","status","json","Promise","all","res","catch","error","push","console","log","onError","containerForm","formTitleFont","title","paymentTitleFont","containerPaymentBtnRow","containerPaymentBtn","containerInputFields","PAYMENT_INFO","map","formfield","i","subFields","containerInputFieldRow","subFormField","ii","name","validators","field","onChange","value","containerInputField","containerInputFieldSml","type","label","isRegistration","containerPriceField","priceFieldFont","paddingTop","containerButton"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from \"react-hook-form\";\nimport styles from './PaymentInfo.style'\nimport ProcessButton from '../Buttons/ProcessButton'\nimport PaymentButton from '../Buttons/PaymentButton'\nimport TextInput from '../TextInput/TextInput'\nimport { useLocation } from \"react-router-dom\";\nimport { FORM_FIELDS } from '../../constants/formConstants';\nimport { registerAccountAction } from '../../actions/accountActions';\nimport Register from './Register';\nimport { useHistory } from 'react-router-dom';\n\nconst PaymentInfo = (props) => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const {formState: { errors }, handleSubmit, control, getValues } = useForm({\n        mode: 'onSubmit', \n        reValidateMode: 'onSubmit'\n    });\n    const history = useHistory();\n\n    const onSubmit = (data, e) => {\n        // data.paymentInfoType = 1;\n        // dispatch(registerAccountAction({\n        //     account: location.state.account,\n        //     paymentInfo: data,\n        // }));\n        register(location.state.account)\n    }\n\n    const register = (request) => {\n        const endPoint = 'https://matuto-api.herokuapp.com/api/account/';\n        return fetch(endPoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            }, \n            body: JSON.stringify(request)\n        }).then((response) => {\n            const status = response.status;\n            const data = response.json();\n            return Promise.all([status, data]).then((res) => ({\n                status: res[0],\n                data: res[1],\n            }));\n        }).catch((error) =>{\n            history.push('/on-boarding')\n            console.log(error);\n        });\n    };\n\n    const onError = (data, e) => {\n        console.log(data);\n    }\n\n    return (\n        <div style={styles().containerForm}>\n            <span style={styles().formTitleFont}>{props.title}</span>\n            <span style={styles().paymentTitleFont}>Payment Information</span>\n            <div style={styles().containerPaymentBtnRow}>\n                <PaymentButton src={'icon-creditcard.png'} text={'Creditcard'} style={styles().containerPaymentBtn}/>\n                <PaymentButton src={'icon-gcash.png'} text={'GCash'} style={styles().containerPaymentBtn}/>\n            </div>\n            <div style={styles().containerInputFields}>\n                {FORM_FIELDS.PAYMENT_INFO.map((formfield, i) => {\n                    if (formfield.subFields) {\n                        return (\n                            <div key={i} style={styles().containerInputFieldRow}>\n                                {formfield.subFields.map((subFormField, ii) => {\n                                    return (\n                                        <Controller\n                                            key={ii}\n                                            control={control}\n                                            name={subFormField.name}\n                                            rules={subFormField.validators}\n                                            defaultValue=\"\"\n                                            render={({\n                                                field: { onChange, value  }\n                                                }) => \n                                                <TextInput onChange={onChange} val={value} style={{...styles().containerInputField, ...styles().containerInputFieldSml}} type={subFormField.type} \n                                                    name={subFormField.name} label={subFormField.label} error={errors[subFormField.name]}/>\n                                            }\n                                        />\n                                    );\n                                })}\n                            </div>\n                        );\n                    } else {\n                        return (        \n                            <Controller\n                                key={i}\n                                control={control}\n                                name={formfield.name}\n                                rules={formfield.validators}\n                                render={({\n                                    field: { onChange, value }\n                                    }) => \n                                    <TextInput onChange={onChange} val={value} style={{...styles().containerInputField}} type={formfield.type} \n                                        name={formfield.name} label={formfield.label} error={errors[formfield.name]}/>\n                                }\n                            />\n                        );\n                    }\n                })}\n            </div>\n            {\n                props.isRegistration ?\n                    null\n                :\n                    (<div  style={styles().containerPriceField}>\n                        <span style={styles().priceFieldFont}>Total Amount:{'\\u00A0'} 1,123 php</span>\n                    </div>)\n            }\n            <ProcessButton onClick={handleSubmit(onSubmit, onError)} style={{paddingTop: 11}} isNav={false} btnLabel=\"Submit\" style={styles().containerButton}/>\n        </div>\n    )\n}\n\nexport default PaymentInfo "]},"metadata":{},"sourceType":"module"}