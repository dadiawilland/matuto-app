{"ast":null,"code":"import { ACCOUNT } from '../redux-constants/accountConstants';\nconst initialState = {\n  account: {},\n  accountLoginError: null,\n  accountRegisterError: null\n};\nexport default ((state = initialState, action) => {\n  const data = action.data;\n\n  switch (action.type) {\n    case ACCOUNT.REGISTER_SUCCESS:\n    case ACCOUNT.LOGIN_SUCCES:\n      return { ...state,\n        account: data,\n        accountLoginError: null,\n        accountRegisterError: null\n      };\n\n    case ACCOUNT.LOGIN_ERROR:\n      return { ...state,\n        account: {},\n        accountLoginError: data\n      };\n\n    case ACCOUNT.REGISTER_ERROR:\n      return { ...state,\n        account: {},\n        accountRegisterError: data\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/reducers/accountReducers.js"],"names":["ACCOUNT","initialState","account","accountLoginError","accountRegisterError","state","action","data","type","REGISTER_SUCCESS","LOGIN_SUCCES","LOGIN_ERROR","REGISTER_ERROR"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qCAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,iBAAiB,EAAE,IAFF;AAGjBC,EAAAA,oBAAoB,EAAE;AAHL,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC7C,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKR,OAAO,CAACS,gBAAb;AACA,SAAKT,OAAO,CAACU,YAAb;AACI,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,OAAO,EAAEK,IAArB;AAA2BJ,QAAAA,iBAAiB,EAAE,IAA9C;AAAoDC,QAAAA,oBAAoB,EAAE;AAA1E,OAAP;;AACJ,SAAKJ,OAAO,CAACW,WAAb;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWH,QAAAA,OAAO,EAAE,EAApB;AAAwBC,QAAAA,iBAAiB,EAAEI;AAA3C,OAAP;;AACJ,SAAKP,OAAO,CAACY,cAAb;AACI,aAAO,EAAC,GAAGP,KAAJ;AAAWH,QAAAA,OAAO,EAAE,EAApB;AAAwBE,QAAAA,oBAAoB,EAAEG;AAA9C,OAAP;;AACJ;AACI,aAAOF,KAAP;AATR;AAWH,CAbD","sourcesContent":["import { ACCOUNT } from '../redux-constants/accountConstants';\n\nconst initialState = {\n    account: {},\n    accountLoginError: null,\n    accountRegisterError: null,\n}\n\nexport default (state = initialState, action) => {\n    const data = action.data;\n    switch (action.type) {\n        case ACCOUNT.REGISTER_SUCCESS:\n        case ACCOUNT.LOGIN_SUCCES: \n            return { ...state, account: data, accountLoginError: null, accountRegisterError: null };\n        case ACCOUNT.LOGIN_ERROR:\n            return {...state, account: {}, accountLoginError: data}\n        case ACCOUNT.REGISTER_ERROR:\n            return {...state, account: {}, accountRegisterError: data}\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}