{"ast":null,"code":"import _objectSpread from\"/Users/willanddadia/Documents/matuto/matuto-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACCOUNT}from'../redux-constants/accountConstants';var initialState={account:{},accountLoginError:null,accountRegisterError:null};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var data=action.data;switch(action.type){case ACCOUNT.REGISTER_SUCCESS:case ACCOUNT.LOGIN_SUCCES:return _objectSpread(_objectSpread({},state),{},{account:data});case ACCOUNT.LOGIN_ERROR:return _objectSpread(_objectSpread({},state),{},{accountLoginError:data});case ACCOUNT.REGISTER_ERROR:return _objectSpread(_objectSpread({},state),{},{accountRegisterError:data});default:return state;}});","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/reducers/accountReducers.js"],"names":["ACCOUNT","initialState","account","accountLoginError","accountRegisterError","state","action","data","type","REGISTER_SUCCESS","LOGIN_SUCCES","LOGIN_ERROR","REGISTER_ERROR"],"mappings":"iIAAA,OAASA,OAAT,KAAwB,qCAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAE,EADQ,CAEjBC,iBAAiB,CAAE,IAFF,CAGjBC,oBAAoB,CAAE,IAHL,CAArB,CAMA,eAAe,UAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBJ,YAAyB,IAAXK,CAAAA,MAAW,2CAC7C,GAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACC,IAApB,CACA,OAAQD,MAAM,CAACE,IAAf,EACI,IAAKR,CAAAA,OAAO,CAACS,gBAAb,CACA,IAAKT,CAAAA,OAAO,CAACU,YAAb,CACI,sCAAYL,KAAZ,MAAmBH,OAAO,CAAEK,IAA5B,GACJ,IAAKP,CAAAA,OAAO,CAACW,WAAb,CACI,sCAAWN,KAAX,MAAkBF,iBAAiB,CAAEI,IAArC,GACJ,IAAKP,CAAAA,OAAO,CAACY,cAAb,CACI,sCAAWP,KAAX,MAAkBD,oBAAoB,CAAEG,IAAxC,GACJ,QACI,MAAOF,CAAAA,KAAP,CATR,CAWH,CAbD","sourcesContent":["import { ACCOUNT } from '../redux-constants/accountConstants';\n\nconst initialState = {\n    account: {},\n    accountLoginError: null,\n    accountRegisterError: null,\n}\n\nexport default (state = initialState, action) => {\n    const data = action.data;\n    switch (action.type) {\n        case ACCOUNT.REGISTER_SUCCESS:\n        case ACCOUNT.LOGIN_SUCCES: \n            return { ...state, account: data };\n        case ACCOUNT.LOGIN_ERROR:\n            return {...state, accountLoginError: data}\n        case ACCOUNT.REGISTER_ERROR:\n            return {...state, accountRegisterError: data}\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}