{"ast":null,"code":"var _jsxFileName = \"/Users/willanddadia/Documents/matuto/matuto-app/src/components/PriceList/PriceList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StyleRoot } from 'radium';\nimport \"react-multi-carousel/lib/styles.css\";\nimport styles from './PriceList.style';\nimport CommonCard from '../../components/Cards/CommonCard';\nimport NavCard from '../../components/Cards/NavCard';\nimport PriceCard from '../../components/Cards/PriceCard';\nimport NavButton from '../../components/Buttons/NavButton';\nimport { getPriceListAction } from '../../actions/priceActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PriceList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const priceList = useSelector(state => state.price.priceList);\n  const selectedPrice = useSelector(state => state.price.selectedPrice);\n  const [isSelected, setisSelected] = useState(false);\n  const [prices, setPrices] = useState([]);\n  useEffect(() => {\n    dispatch(getPriceListAction({}));\n  }, []);\n  useEffect(() => {\n    console.log(priceList);\n\n    if (priceList) {\n      setPrices(priceList);\n    }\n  }, [priceList]);\n  useEffect(() => {\n    console.log(selectedPrice);\n  }, [selectedPrice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles().containerPriceList,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles().containerCardContent,\n      children: /*#__PURE__*/_jsxDEV(StyleRoot, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles().containerCardList,\n          children: prices === null || prices === void 0 ? void 0 : prices.map((price, i) => {\n            return /*#__PURE__*/_jsxDEV(PriceCard, {\n              price: price\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n      title: \"Go to payment\",\n      dest: \"payment\",\n      style: styles(selectedPrice.id == undefined).containerButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PriceList, \"++TuwZuEpu/sSU5LoQAbRHVQ5Hc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PriceList;\nexport default PriceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceList\");","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/components/PriceList/PriceList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","StyleRoot","styles","CommonCard","NavCard","PriceCard","NavButton","getPriceListAction","PriceList","dispatch","priceList","state","price","selectedPrice","isSelected","setisSelected","prices","setPrices","console","log","containerPriceList","containerCardContent","containerCardList","map","i","id","undefined","containerButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,qCAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,SAAxB,CAA7B;AACA,QAAMG,aAAa,GAAGb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,aAAxB,CAAjC;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACF,kBAAkB,CAAC,EAAD,CAAnB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;;AACA,QAAIA,SAAJ,EAAe;AACXO,MAAAA,SAAS,CAACP,SAAD,CAAT;AACH;AACJ,GALQ,EAKN,CAACA,SAAD,CALM,CAAT;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACH,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,KAAK,EAAEX,MAAM,GAAGkB,kBAArB;AAAA,4BACI;AAAK,MAAA,KAAK,EAAElB,MAAM,GAAGmB,oBAArB;AAAA,6BACI,QAAC,SAAD;AAAA,+BACI;AAAK,UAAA,KAAK,EAAEnB,MAAM,GAAGoB,iBAArB;AAAA,oBACKN,MADL,aACKA,MADL,uBACKA,MAAM,CAAEO,GAAR,CAAY,CAACX,KAAD,EAAQY,CAAR,KAAc;AACvB,gCACI,QAAC,SAAD;AAAmB,cAAA,KAAK,EAAEZ;AAA1B,eAAgBY,CAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,eAAjB;AAAiC,MAAA,IAAI,EAAC,SAAtC;AAAgD,MAAA,KAAK,EAAEtB,MAAM,CAACW,aAAa,CAACY,EAAd,IAAoBC,SAArB,CAAN,CAAsCC;AAA7F;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAzCD;;GAAMnB,S;UACeT,W,EACCC,W,EACIA,W;;;KAHpBQ,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StyleRoot } from 'radium'\nimport \"react-multi-carousel/lib/styles.css\";\nimport styles from './PriceList.style'\nimport CommonCard from '../../components/Cards/CommonCard'\nimport NavCard from '../../components/Cards/NavCard'\nimport PriceCard from '../../components/Cards/PriceCard'\nimport NavButton from '../../components/Buttons/NavButton'\nimport { getPriceListAction } from '../../actions/priceActions';\n\nconst PriceList = () => {\n    const dispatch = useDispatch();\n    const priceList = useSelector((state) => state.price.priceList);\n    const selectedPrice = useSelector((state) => state.price.selectedPrice);\n\n    const [isSelected, setisSelected] = useState(false);\n    const [prices, setPrices] = useState([]);\n\n    useEffect(() => {\n        dispatch(getPriceListAction({}));\n    }, []);\n\n    useEffect(() => {\n        console.log(priceList);\n        if (priceList) {\n            setPrices(priceList);\n        }\n    }, [priceList]);\n\n    useEffect(() => {\n        console.log(selectedPrice);\n    }, [selectedPrice]);\n\n    return (\n        <div style={styles().containerPriceList}>\n            <div style={styles().containerCardContent}>\n                <StyleRoot>\n                    <div style={styles().containerCardList}>\n                        {prices?.map((price, i) => {\n                            return (\n                                <PriceCard key={i} price={price}/>\n                            );\n                        })}\n                    </div>\n                </StyleRoot>\n            </div>\n            {/* <ProcessButton isNav={false} btnLabel=\"Proceed\" style={{...styles().containerButton,\n                                                                          ...{display: isSelected ? 'flex' : 'flex'}}}/> */}\n            <NavButton title=\"Go to payment\" dest=\"payment\" style={styles(selectedPrice.id == undefined).containerButton} />\n        </div>\n    )\n}\n\nexport default PriceList"]},"metadata":{},"sourceType":"module"}