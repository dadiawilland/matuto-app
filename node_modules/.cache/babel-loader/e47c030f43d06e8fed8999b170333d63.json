{"ast":null,"code":"import _objectSpread from\"/Users/willanddadia/Documents/matuto/matuto-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{useDispatch,useSelector}from'react-redux';import{useForm,Controller}from\"react-hook-form\";import styles from'./CreatePartnerModal.style';import SideNavigator from'../SideNavigator/SideNavigator';import SearchBar from'../Search/SearchBar';import makeStyles from\"@material-ui/core/styles/makeStyles\";import DataTable from'../DataTable/DataTable';import AdminCard from'../Cards/AdminCard';import ProfileList from'../ProfileList/ProfileList';import{StyleRoot}from'radium';import RegisterButton from'../Buttons/RegisterButton';import AdminHeader from'../Header/AdminHeader';import TextInput from'../TextInput/TextInput';import TextArea from'../TextArea/TextArea';import ProcessButton from'../Buttons/ProcessButton';import CloseButton from'../Buttons/CloseButton';import{toggleCreatePartnerModalAction,createPartnerAction}from'../../actions/adminActions';import{FORM_FIELDS}from'../../constants/formConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreatePartnerModal=function CreatePartnerModal(){var dispatch=useDispatch();var _useForm=useForm({mode:'onSubmit',reValidateMode:'onSubmit'}),errors=_useForm.formState.errors,handleSubmit=_useForm.handleSubmit,control=_useForm.control,getValues=_useForm.getValues,reset=_useForm.reset;var onSubmit=function onSubmit(data,e){dispatch(createPartnerAction(data));console.log(data);};var onError=function onError(data,e){console.log(data);};var closeModal=function closeModal(){reset();dispatch(toggleCreatePartnerModalAction());};return/*#__PURE__*/_jsx(\"div\",{style:styles().containerModal,children:/*#__PURE__*/_jsxs(\"div\",{style:styles().containerForm,children:[/*#__PURE__*/_jsx(\"span\",{style:styles().fontModalTitle,children:\"Create Partner Application\"}),/*#__PURE__*/_jsx(CloseButton,{style:styles().closeButtonContainer,onClick:function onClick(){return closeModal();}}),/*#__PURE__*/_jsx(\"div\",{style:styles().containerFormBody,children:FORM_FIELDS.CREATE_PARTNER.map(function(formfield,i){if(formfield.subFields){return/*#__PURE__*/_jsx(\"div\",{style:styles().containerInputFieldRow,children:formfield.subFields.map(function(subFormField,ii){return/*#__PURE__*/_jsx(Controller,{control:control,name:subFormField.name,rules:subFormField.validators,defaultValue:\"\",render:function render(_ref){var _ref$field=_ref.field,onChange=_ref$field.onChange,value=_ref$field.value;return/*#__PURE__*/_jsx(TextInput,{onChange:onChange,val:value,style:_objectSpread(_objectSpread({},styles().containerInputField),styles().containerInputFieldSml),type:subFormField.type,name:subFormField.name,label:subFormField.label,error:errors[subFormField.name]});}},ii);})},i);}else{return/*#__PURE__*/_jsx(Controller,{control:control,name:formfield.name,rules:formfield.validators,render:function render(_ref2){var _ref2$field=_ref2.field,onChange=_ref2$field.onChange,value=_ref2$field.value;return/*#__PURE__*/_jsx(TextArea,{onChange:onChange,val:value,style:_objectSpread({},styles().containerInputField),type:formfield.type,name:formfield.name,label:formfield.label,error:errors[formfield.name]});}},i);}})}),/*#__PURE__*/_jsx(ProcessButton,{onClick:handleSubmit(onSubmit,onError),isNav:false,btnLabel:\"Submit\",style:styles().containerButton})]})});};export default CreatePartnerModal;","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/components/Modal/CreatePartnerModal.js"],"names":["React","useDispatch","useSelector","useForm","Controller","styles","SideNavigator","SearchBar","makeStyles","DataTable","AdminCard","ProfileList","StyleRoot","RegisterButton","AdminHeader","TextInput","TextArea","ProcessButton","CloseButton","toggleCreatePartnerModalAction","createPartnerAction","FORM_FIELDS","CreatePartnerModal","dispatch","mode","reValidateMode","errors","formState","handleSubmit","control","getValues","reset","onSubmit","data","e","console","log","onError","closeModal","containerModal","containerForm","fontModalTitle","closeButtonContainer","containerFormBody","CREATE_PARTNER","map","formfield","i","subFields","containerInputFieldRow","subFormField","ii","name","validators","field","onChange","value","containerInputField","containerInputFieldSml","type","label","containerButton"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from \"react-hook-form\";\nimport styles from './CreatePartnerModal.style'\nimport SideNavigator from '../SideNavigator/SideNavigator'\nimport SearchBar from '../Search/SearchBar'\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport DataTable from '../DataTable/DataTable'\nimport AdminCard from '../Cards/AdminCard';\nimport ProfileList from '../ProfileList/ProfileList'\nimport { StyleRoot } from 'radium'\nimport RegisterButton from '../Buttons/RegisterButton';\nimport AdminHeader from '../Header/AdminHeader';\nimport TextInput from '../TextInput/TextInput';\nimport TextArea from '../TextArea/TextArea';\nimport ProcessButton from '../Buttons/ProcessButton';\nimport CloseButton from '../Buttons/CloseButton';\nimport { toggleCreatePartnerModalAction, createPartnerAction } from '../../actions/adminActions';\nimport { FORM_FIELDS } from '../../constants/formConstants';\n\nconst CreatePartnerModal = () => {\n    const dispatch = useDispatch();\n    const {formState: { errors }, handleSubmit, control, getValues, reset } = useForm({\n        mode: 'onSubmit', \n        reValidateMode: 'onSubmit'\n    });\n\n    const onSubmit = (data, e) => {\n        dispatch(createPartnerAction(data));\n        console.log(data);\n    }\n\n    const onError = (data, e) => {\n        console.log(data);\n    }\n\n    const closeModal = () => {\n        reset();\n        dispatch(toggleCreatePartnerModalAction());\n    }\n\n\n    return (\n            <div style={styles().containerModal}>\n                <div style={styles().containerForm}>\n                    <span style={styles().fontModalTitle}>Create Partner Application</span>\n                    <CloseButton style={styles().closeButtonContainer} onClick={() => closeModal()}/>\n                    <div style={styles().containerFormBody}>\n                        {FORM_FIELDS.CREATE_PARTNER.map((formfield, i) => {\n                            if (formfield.subFields) {\n                                return (\n                                    <div key={i} style={styles().containerInputFieldRow}>\n                                        {formfield.subFields.map((subFormField, ii) => {\n                                            return (\n                                                <Controller\n                                                    key={ii}\n                                                    control={control}\n                                                    name={subFormField.name}\n                                                    rules={subFormField.validators}\n                                                    defaultValue=\"\"\n                                                    render={({\n                                                        field: { onChange, value  }\n                                                        }) => \n                                                        <TextInput onChange={onChange} val={value} style={{...styles().containerInputField, ...styles().containerInputFieldSml}} type={subFormField.type} \n                                                            name={subFormField.name} label={subFormField.label} error={errors[subFormField.name]}/>\n                                                    }\n                                                />\n                                            );\n                                        })}\n                                    </div>\n                                );\n                            } else {\n                                return (        \n                                    <Controller\n                                        key={i}\n                                        control={control}\n                                        name={formfield.name}\n                                        rules={formfield.validators}\n                                        render={({\n                                            field: { onChange, value }\n                                            }) => \n                                            <TextArea onChange={onChange} val={value} style={{...styles().containerInputField}} type={formfield.type} \n                                                name={formfield.name} label={formfield.label} error={errors[formfield.name]}/>\n                                        }\n                                    />\n                                );\n                            }\n                        })}\n                    </div>\n                    <ProcessButton onClick={handleSubmit(onSubmit, onError)} isNav={false} btnLabel=\"Submit\" style={styles().containerButton}/>\n                </div>\n            </div>\n    )\n}\n\nexport default CreatePartnerModal"]},"metadata":{},"sourceType":"module"}