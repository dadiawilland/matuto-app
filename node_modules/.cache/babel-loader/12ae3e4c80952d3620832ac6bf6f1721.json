{"ast":null,"code":"import _slicedToArray from\"/Users/willanddadia/Documents/matuto/matuto-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import styles from'./AnswerCard.style';import CloseButton from'../Buttons/CloseButton';import icn from'../../assets/icon-arrow-white.png';import lessonIcon from'../../assets/icon-lesson.png';import{jsx as _jsx}from\"react/jsx-runtime\";var AnswerCard=function AnswerCard(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSelected=_useState2[0],setIsSelected=_useState2[1];return/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setIsSelected(!isSelected);},style:styles(isSelected).containerChoice,children:/*#__PURE__*/_jsx(\"span\",{style:styles(isSelected).fontChoice,children:props.title})});};export default AnswerCard;","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/components/Cards/AnswerCard.js"],"names":["React","useState","useEffect","styles","CloseButton","icn","lessonIcon","AnswerCard","props","isSelected","setIsSelected","containerChoice","fontChoice","title"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mCAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAE1B,cAAoCP,QAAQ,CAAC,KAAD,CAA5C,wCAAOQ,UAAP,eAAmBC,aAAnB,eAEA,mBACI,YAAK,OAAO,CAAE,yBAAMA,CAAAA,aAAa,CAAC,CAACD,UAAF,CAAnB,EAAd,CAAgD,KAAK,CAAEN,MAAM,CAACM,UAAD,CAAN,CAAmBE,eAA1E,uBACI,aAAM,KAAK,CAAER,MAAM,CAACM,UAAD,CAAN,CAAmBG,UAAhC,UAA6CJ,KAAK,CAACK,KAAnD,EADJ,EADJ,CAMH,CAVD,CAYA,cAAeN,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './AnswerCard.style'\nimport CloseButton from '../Buttons/CloseButton';\nimport icn from '../../assets/icon-arrow-white.png'\nimport lessonIcon from '../../assets/icon-lesson.png'\n\nconst AnswerCard = (props) => {\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    return (\n        <div onClick={() => setIsSelected(!isSelected)} style={styles(isSelected).containerChoice}>\n            <span style={styles(isSelected).fontChoice}>{props.title}</span>\n        </div>\n                        \n    )\n}\n\nexport default AnswerCard"]},"metadata":{},"sourceType":"module"}