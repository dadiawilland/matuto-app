{"ast":null,"code":"import _defineProperty from\"/Users/willanddadia/Documents/matuto/matuto-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/willanddadia/Documents/matuto/matuto-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/willanddadia/Documents/matuto/matuto-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useForm,Controller}from\"react-hook-form\";import styles from'./Register.style';import ProcessButton from'../../components/Buttons/ProcessButton';import TextInput from'../../components/TextInput/TextInput';import{FORM_FIELDS}from'../../constants/formConstants';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=function Register(){var history=useHistory();var _useForm=useForm({mode:'onSubmit',reValidateMode:'onSubmit'}),errors=_useForm.formState.errors,handleSubmit=_useForm.handleSubmit,control=_useForm.control,getValues=_useForm.getValues;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),val=_useState2[0],setVal=_useState2[1];var onSubmit=function onSubmit(data,e){history.push({pathname:'/payment-info',state:{account:data}});};var onError=function onError(data,e){console.log(data);};return/*#__PURE__*/_jsxs(\"div\",{style:styles().containerForm,children:[/*#__PURE__*/_jsx(\"span\",{style:styles().formTitleFont,children:\"Register to Matuto\"}),/*#__PURE__*/_jsx(\"div\",{style:styles().containerInputFieldRow,children:FORM_FIELDS.REGISTER_NAME.map(function(formfield,i){return/*#__PURE__*/_jsx(Controller,{control:control,name:formfield.name,rules:formfield.validators,render:function render(_ref){var _ref$field=_ref.field,onChange=_ref$field.onChange,value=_ref$field.value;return/*#__PURE__*/_jsx(TextInput,{onChange:onChange,val:value,style:_objectSpread(_objectSpread({},styles().containerInputField),styles().containerInputFieldSml),type:formfield.type,name:formfield.name,label:formfield.label,error:errors[formfield.name]});}},i);})}),/*#__PURE__*/_jsx(\"div\",{style:styles().containerInputFields,children:FORM_FIELDS.REGISTER.map(function(formfield,i){if(formfield.name==='passwordConfirm'){formfield.validators=_objectSpread(_objectSpread({},formfield.validators),{},{validate:{matchesPreviousPassword:function matchesPreviousPassword(value){var _getValues=getValues(),password=_getValues.password;return password===value||'Passwords should match!';}}});}return/*#__PURE__*/_jsx(Controller,{control:control,name:formfield.name,rules:formfield.validators,render:function render(_ref2){var _ref2$field=_ref2.field,onChange=_ref2$field.onChange,value=_ref2$field.value;return/*#__PURE__*/_jsx(TextInput,{onChange:onChange,val:value,style:styles().containerInputField,type:formfield.type,name:formfield.name,label:formfield.label,error:errors[formfield.name]});}},i);})}),/*#__PURE__*/_jsx(ProcessButton,_defineProperty({onClick:handleSubmit(onSubmit,onError),style:{top:300},isNav:false,dest:'payment-info',btnLabel:\"Next\"},\"style\",styles().containerButton))]});};export default Register;","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/components/Register/Register.js"],"names":["React","useEffect","useState","useForm","Controller","styles","ProcessButton","TextInput","FORM_FIELDS","useHistory","Register","history","mode","reValidateMode","errors","formState","handleSubmit","control","getValues","val","setVal","onSubmit","data","e","push","pathname","state","account","onError","console","log","containerForm","formTitleFont","containerInputFieldRow","REGISTER_NAME","map","formfield","i","name","validators","field","onChange","value","containerInputField","containerInputFieldSml","type","label","containerInputFields","REGISTER","validate","matchesPreviousPassword","password","top","containerButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport { useForm, Controller } from \"react-hook-form\";\nimport styles from './Register.style'\nimport ProcessButton from '../../components/Buttons/ProcessButton'\nimport TextInput from '../../components/TextInput/TextInput'\nimport { FORM_FIELDS } from '../../constants/formConstants';\nimport { useHistory } from 'react-router-dom';\n\nconst Register = () => {\n\n    const history = useHistory();\n\n    const {formState: { errors }, handleSubmit, control, getValues } = useForm({\n        mode: 'onSubmit', \n        reValidateMode: 'onSubmit'\n    });\n\n    const [val, setVal] = useState('');\n\n    \n    const onSubmit = (data, e) => {\n        history.push({\n            pathname: '/payment-info',\n            state: {account: data}\n        })\n    }\n\n    const onError = (data, e) => {\n        console.log(data);\n    }\n\n    return (\n        <div style={styles().containerForm}>\n            <span style={styles().formTitleFont}>Register to Matuto</span>\n            <div style={styles().containerInputFieldRow}>\n                {FORM_FIELDS.REGISTER_NAME.map((formfield, i) => {\n                    return (        \n                        <Controller\n                            key={i}\n                            control={control}\n                            name={formfield.name}\n                            rules={formfield.validators}\n                            render={({\n                                field: { onChange, value }\n                                }) => \n                                <TextInput onChange={onChange} val={value} style={{...styles().containerInputField, ...styles().containerInputFieldSml}} type={formfield.type} \n                                    name={formfield.name} label={formfield.label} error={errors[formfield.name]}/>\n                            }\n                        />\n                    );\n                })}\n            </div>\n            <div style={styles().containerInputFields}>\n                {FORM_FIELDS.REGISTER.map((formfield, i) => {\n                    if (formfield.name === 'passwordConfirm') {\n                        formfield.validators = {...formfield.validators, \n                            validate: {\n                            matchesPreviousPassword: (value) => {\n                              const { password } = getValues();\n                              return password === value || 'Passwords should match!';\n                            },\n                          },\n                        }\n                    }\n                    return (        \n                        <Controller\n                            key={i}\n                            control={control}\n                            name={formfield.name}\n                            rules={formfield.validators}\n                            render={({\n                                field: { onChange, value }\n                                }) => \n                                <TextInput onChange={onChange} val={value} style={styles().containerInputField} type={formfield.type} \n                                    name={formfield.name} label={formfield.label} error={errors[formfield.name]}/>\n                            }\n                        />\n                    );\n                })}\n            </div>\n            <ProcessButton onClick={handleSubmit(onSubmit, onError)} style={{top: 300}} isNav={false} dest={'payment-info'} btnLabel=\"Next\" style={styles().containerButton}/>\n        </div>\n    )\n}\n\nexport default Register "]},"metadata":{},"sourceType":"module"}