{"ast":null,"code":"var _jsxFileName = \"/Users/willanddadia/Documents/matuto/matuto-app/src/containers/Admin/Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Admin.style';\nimport SideNavigator from '../../components/SideNavigator/SideNavigator';\nimport JobPostModal from '../../components/Modal/JobPostModal';\nimport CreatePartnerModal from '../../components/Modal/CreatePartnerModal';\nimport CareerMarket from '../../components/Admin/CareerMarket';\nimport StudentCenter from '../../components/Admin/StudentCenter';\nimport Recruitment from '../../components/Admin/Recruitment';\nimport Partners from '../../components/Admin/Partners';\nimport { clearJobPostSuccessAction, clearJobPostErrorAction, toggleJobPostModalAction, clearPartnerSuccessAction, clearPartnerErrorAction, toggleCreatePartnerModalAction } from '../../actions/adminActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const jobPostModalVisible = useSelector(state => state.admin.jobPostModalVisible);\n  const createPartnerModalVisible = useSelector(state => state.admin.createPartnerModalVisible); //job post success and error\n\n  const jobPostSuccess = useSelector(state => state.admin.jobPostSuccess);\n  const jobPostError = useSelector(state => state.admin.jobPostError); //partner create success and error\n\n  const createPartnerSuccess = useSelector(state => state.admin.createPartnerSuccess);\n  const createPartnerError = useSelector(state => state.admin.createPartnerError);\n  const location = useLocation().pathname;\n\n  const renderContent = () => {\n    switch (location) {\n      case '/admin':\n      case '/admin-career':\n        return /*#__PURE__*/_jsxDEV(CareerMarket, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this);\n\n      case '/admin-student':\n        return /*#__PURE__*/_jsxDEV(StudentCenter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this);\n\n      case '/admin-recruitment':\n        return /*#__PURE__*/_jsxDEV(Recruitment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this);\n\n      case '/admin-partner':\n        return /*#__PURE__*/_jsxDEV(Partners, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  const notify = message => {\n    toast(message, {\n      position: \"top-center\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  useEffect(() => {\n    if (jobPostSuccess) {\n      notify('✔️ Job Post Created!');\n      dispatch(toggleJobPostModalAction());\n      dispatch(clearJobPostSuccessAction());\n    }\n\n    if (jobPostError) {\n      notify('❌ Error Creating Job Post');\n      dispatch(toggleJobPostModalAction());\n      dispatch(clearJobPostErrorAction());\n    }\n  }, [jobPostSuccess, jobPostError]);\n  useEffect(() => {\n    if (createPartnerSuccess) {\n      notify('✔️ Partner Created!');\n      dispatch(toggleCreatePartnerModalAction());\n      dispatch(clearPartnerSuccessAction());\n    }\n\n    if (createPartnerError) {\n      console.log(createPartnerError);\n      notify('❌ Error Creating Partner');\n      dispatch(toggleCreatePartnerModalAction());\n      dispatch(clearPartnerErrorAction());\n    }\n  }, [createPartnerSuccess, createPartnerError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles().containerAdmin,\n    children: [/*#__PURE__*/_jsxDEV(SideNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), renderContent(), jobPostModalVisible && /*#__PURE__*/_jsxDEV(JobPostModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 37\n    }, this), createPartnerModalVisible && /*#__PURE__*/_jsxDEV(CreatePartnerModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Admin, \"T5mH0YDYn+x3KsSaRaPbd76lCjk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useLocation];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/containers/Admin/Admin.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","ToastContainer","toast","styles","SideNavigator","JobPostModal","CreatePartnerModal","CareerMarket","StudentCenter","Recruitment","Partners","clearJobPostSuccessAction","clearJobPostErrorAction","toggleJobPostModalAction","clearPartnerSuccessAction","clearPartnerErrorAction","toggleCreatePartnerModalAction","Admin","dispatch","jobPostModalVisible","state","admin","createPartnerModalVisible","jobPostSuccess","jobPostError","createPartnerSuccess","createPartnerError","location","pathname","renderContent","notify","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","console","log","containerAdmin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Admin.style'\nimport SideNavigator from '../../components/SideNavigator/SideNavigator'\nimport JobPostModal from '../../components/Modal/JobPostModal';\nimport CreatePartnerModal from '../../components/Modal/CreatePartnerModal';\nimport CareerMarket from '../../components/Admin/CareerMarket';\nimport StudentCenter from '../../components/Admin/StudentCenter';\nimport Recruitment from '../../components/Admin/Recruitment';\nimport Partners from '../../components/Admin/Partners';\nimport { clearJobPostSuccessAction, \n        clearJobPostErrorAction, \n        toggleJobPostModalAction,\n        clearPartnerSuccessAction,\n        clearPartnerErrorAction,\n        toggleCreatePartnerModalAction\n    } from '../../actions/adminActions';\n\n\n\nconst Admin = () => {\n    const dispatch = useDispatch();\n    const jobPostModalVisible = useSelector((state) => state.admin.jobPostModalVisible);\n    const createPartnerModalVisible = useSelector((state) => state.admin.createPartnerModalVisible);\n    \n    //job post success and error\n    const jobPostSuccess = useSelector((state) => state.admin.jobPostSuccess);\n    const jobPostError = useSelector((state) => state.admin.jobPostError);\n   \n    //partner create success and error\n    const createPartnerSuccess = useSelector((state) => state.admin.createPartnerSuccess);\n    const createPartnerError = useSelector((state) => state.admin.createPartnerError);\n    const location = useLocation().pathname;\n\n    const renderContent = () => {\n        switch(location) {\n            case '/admin':\n            case '/admin-career':\n                return <CareerMarket/>;\n            case '/admin-student':\n                return <StudentCenter/>;\n            case '/admin-recruitment':\n                return <Recruitment/>;\n            case '/admin-partner':\n                return <Partners/>;\n        }\n    }\n\n    const notify = (message) => {\n        toast(message, {\n            position: \"top-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });\n    }\n\n    useEffect(() => {\n        if (jobPostSuccess) {\n            notify('✔️ Job Post Created!');\n            dispatch(toggleJobPostModalAction());\n            dispatch(clearJobPostSuccessAction());\n        } \n\n        if (jobPostError) {\n            notify('❌ Error Creating Job Post');\n            dispatch(toggleJobPostModalAction());\n            dispatch(clearJobPostErrorAction());\n        } \n    }, [jobPostSuccess, jobPostError]);\n\n    useEffect(() => {\n        if (createPartnerSuccess) {\n            notify('✔️ Partner Created!');\n            dispatch(toggleCreatePartnerModalAction());\n            dispatch(clearPartnerSuccessAction());\n\n        } \n\n        if (createPartnerError) {\n            console.log(createPartnerError);\n            notify('❌ Error Creating Partner');\n            dispatch(toggleCreatePartnerModalAction());\n            dispatch(clearPartnerErrorAction());\n\n        } \n    }, [createPartnerSuccess, createPartnerError]);\n\n    return (\n        <div style={styles().containerAdmin}>\n            <SideNavigator/>\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            {renderContent()}\n            {jobPostModalVisible && <JobPostModal/>}\n            {createPartnerModalVisible && <CreatePartnerModal />}\n        </div>\n    )\n}\n\nexport default Admin"]},"metadata":{},"sourceType":"module"}