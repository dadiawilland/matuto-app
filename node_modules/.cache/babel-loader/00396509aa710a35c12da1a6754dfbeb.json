{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import{useForm,Controller}from\"react-hook-form\";import styles from'./Login.style';import{NavLink}from'react-router-dom';import ProcessButton from'../../components/Buttons/ProcessButton';import AltLoginButton from'../../components/Buttons/AltLoginButton';import TextInput from'../../components/TextInput/TextInput';import{FORM_FIELDS}from'../../constants/formConstants';import{loginAction}from'../../actions/accountActions';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var dispatch=useDispatch();var _useForm=useForm({mode:'onSubmit',reValidateMode:'onSubmit'}),errors=_useForm.formState.errors,handleSubmit=_useForm.handleSubmit,control=_useForm.control;var account=useSelector(function(state){return state.account.account;});var accountLoginError=useSelector(function(state){return state.account.accountLoginError;});var history=useHistory();var onSubmit=function onSubmit(data,e){// console.log(data)\n// dispatch(loginAction(data));\nconsole.log('updated');login(data);};var login=function login(request){var endPoint='https://matuto-api.herokuapp.com/api/account/login';return fetch(endPoint,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(request)}).then(function(response){var status=response.status;var data=response.json();return Promise.all([status,data]).then(function(res){return{status:res[0],data:res[1]};});}).catch(function(error){history.push('/on-boarding');console.log(error);});};var onError=function onError(data,e){console.log(data);};useEffect(function(){console.log(account);},[account]);useEffect(function(){console.log(accountLoginError);},[accountLoginError]);return/*#__PURE__*/_jsxs(\"div\",{style:styles().containerForm,children:[/*#__PURE__*/_jsx(\"span\",{style:styles().formTitleFont,children:\"Login to Matuto\"}),FORM_FIELDS.LOGIN.map(function(formfield,i){return/*#__PURE__*/_jsx(Controller,{control:control,name:formfield.name,rules:formfield.validators,render:function render(_ref){var _ref$field=_ref.field,onChange=_ref$field.onChange,value=_ref$field.value;return/*#__PURE__*/_jsx(TextInput,{onChange:onChange,val:value,style:styles().containerInputField,type:formfield.type,name:formfield.name,label:formfield.label,error:errors[formfield.name]});}},i);}),/*#__PURE__*/_jsxs(\"div\",{style:styles().containerCheckbox,children:[/*#__PURE__*/_jsx(\"input\",{style:styles().checkboxField,type:\"checkbox\"}),/*#__PURE__*/_jsx(\"span\",{style:styles().checkboxFieldFont,children:\"Keep me logged in\"})]}),/*#__PURE__*/_jsx(ProcessButton,{onClick:handleSubmit(onSubmit,onError),isNav:false,btnLabel:\"Login\",style:styles().containerButton}),/*#__PURE__*/_jsxs(\"div\",{style:styles().containerBreak,children:[/*#__PURE__*/_jsx(\"div\",{style:styles().breakLines}),/*#__PURE__*/_jsx(\"span\",{style:styles().breakFont,children:\"Or\"}),/*#__PURE__*/_jsx(\"div\",{style:styles().breakLines})]}),/*#__PURE__*/_jsx(AltLoginButton,{dest:\"/\",src:'icon-google.png',text:'Sign in with Google',style:styles().containerButton}),/*#__PURE__*/_jsx(AltLoginButton,{dest:\"/\",src:'icon-fb.png',text:'Sign in with Facebook',style:styles().containerButton}),/*#__PURE__*/_jsxs(\"p\",{style:styles().signUpFont,children:[\"Not a member yet? \",/*#__PURE__*/_jsx(NavLink,{style:styles().signUpLinkFont,to:\"/register\",children:\"Sign up here\"})]})]});};export default Login;","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/components/Login/Login.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useForm","Controller","styles","NavLink","ProcessButton","AltLoginButton","TextInput","FORM_FIELDS","loginAction","useHistory","Login","dispatch","mode","reValidateMode","errors","formState","handleSubmit","control","account","state","accountLoginError","history","onSubmit","data","e","console","log","login","request","endPoint","fetch","method","headers","body","JSON","stringify","then","response","status","json","Promise","all","res","catch","error","push","onError","containerForm","formTitleFont","LOGIN","map","formfield","i","name","validators","field","onChange","value","containerInputField","type","label","containerCheckbox","checkboxField","checkboxFieldFont","containerButton","containerBreak","breakLines","breakFont","signUpFont","signUpLinkFont"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller  } from \"react-hook-form\";\nimport styles from './Login.style'\nimport {NavLink} from 'react-router-dom'\nimport ProcessButton from '../../components/Buttons/ProcessButton'\nimport AltLoginButton from '../../components/Buttons/AltLoginButton'\nimport TextInput from '../../components/TextInput/TextInput';\nimport { FORM_FIELDS } from '../../constants/formConstants';\nimport { loginAction } from '../../actions/accountActions';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const {formState: { errors }, handleSubmit, control } = useForm({\n        mode: 'onSubmit', \n        reValidateMode: 'onSubmit'\n    });\n    const account = useSelector((state) => state.account.account);\n    const accountLoginError = useSelector((state) => state.account.accountLoginError);\n    const history = useHistory();\n\n\n    const onSubmit = (data, e) => {\n        // console.log(data)\n        // dispatch(loginAction(data));\n        console.log('updated')\n        login(data)\n    }\n\n    const login = (request) => {\n        const endPoint = 'https://matuto-api.herokuapp.com/api/account/login';\n        return fetch(endPoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            }, \n            body: JSON.stringify(request)\n        }).then((response) => {\n            const status = response.status;\n            const data = response.json();\n            return Promise.all([status, data]).then((res) => ({\n                status: res[0],\n                data: res[1],\n            }));\n        }).catch((error) =>{\n            history.push('/on-boarding')\n            console.log(error);\n        });\n    }\n\n    const onError = (data, e) => {\n        console.log(data);\n    }\n\n    useEffect(() => {\n        console.log(account);\n    }, [account]);\n\n    \n    useEffect(() => {\n        console.log(accountLoginError);\n    }, [accountLoginError]);\n\n    return (\n        <div style={styles().containerForm}>\n            <span style={styles().formTitleFont}>Login to Matuto</span>\n            {FORM_FIELDS.LOGIN.map((formfield, i) => {\n                return (        \n                    <Controller\n                        key={i}\n                        control={control}\n                        name={formfield.name}\n                        rules={formfield.validators}\n                        render={({\n                            field: { onChange, value }\n                            }) => \n                            <TextInput onChange={onChange} val={value} style={styles().containerInputField} type={formfield.type} \n                                name={formfield.name} label={formfield.label} error={errors[formfield.name]}/>\n                        }\n                    />\n                );\n            })}\n            <div style={styles().containerCheckbox}>\n                <input style={styles().checkboxField} type=\"checkbox\"/>\n                <span style={styles().checkboxFieldFont}>Keep me logged in</span>\n            </div>\n            <ProcessButton onClick={handleSubmit(onSubmit, onError)} isNav={false} btnLabel=\"Login\" style={styles().containerButton}/>\n            <div style={styles().containerBreak}>\n                <div style={styles().breakLines}/>\n                <span style={styles().breakFont}>Or</span>\n                <div style={styles().breakLines}/>\n            </div>\n            <AltLoginButton dest=\"/\" src={'icon-google.png'} text={'Sign in with Google'} style={styles().containerButton}/>\n            <AltLoginButton dest=\"/\" src={'icon-fb.png'} text={'Sign in with Facebook'} style={styles().containerButton}/>\n            <p style={styles().signUpFont}>Not a member yet? <NavLink style={styles().signUpLinkFont} to=\"/register\">Sign up here</NavLink></p>\n        </div>\n    )\n}\n\nexport default Login "]},"metadata":{},"sourceType":"module"}