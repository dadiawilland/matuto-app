{"ast":null,"code":"import _regeneratorRuntime from\"/Users/willanddadia/Documents/matuto/matuto-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(createJobPostSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(createPartnerSaga);import{call,put}from'redux-saga/effects';import{ADMIN}from'../redux-constants/adminConstants';import{createJobPostService,createPartnerService}from'../services/admin.service';export function createJobPostSaga(request){var response;return _regeneratorRuntime.wrap(function createJobPostSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;request.data.partnerId=1;_context.next=4;return call(createJobPostService,request.data);case 4:response=_context.sent;if(!(response.status==200)){_context.next=10;break;}_context.next=8;return put({type:ADMIN.CREATE_JOBPOST_SUCCESS,data:response.data});case 8:_context.next=12;break;case 10:_context.next=12;return put({type:ADMIN.CREATE_JOBPOST_ERROR,data:response});case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_marked,null,[[0,14]]);};export function createPartnerSaga(request){var response;return _regeneratorRuntime.wrap(function createPartnerSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;request.data.applicationStatus=0;_context2.next=4;return call(createPartnerService,request.data);case 4:response=_context2.sent;if(!(response.status==200)){_context2.next=10;break;}_context2.next=8;return put({type:ADMIN.CREATE_PARTNER_SUCCESS,data:response.data});case 8:_context2.next=12;break;case 10:_context2.next=12;return put({type:ADMIN.CREATE_PARTNER_ERROR,data:response});case 12:_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 17:case\"end\":return _context2.stop();}}},_marked2,null,[[0,14]]);};","map":{"version":3,"sources":["/Users/willanddadia/Documents/matuto/matuto-app/src/sagas/adminSagas.js"],"names":["createJobPostSaga","createPartnerSaga","call","put","ADMIN","createJobPostService","createPartnerService","request","data","partnerId","response","status","type","CREATE_JOBPOST_SUCCESS","CREATE_JOBPOST_ERROR","console","log","applicationStatus","CREATE_PARTNER_SUCCESS","CREATE_PARTNER_ERROR"],"mappings":"2KAKiBA,iB,iDAcAC,iB,EAnBjB,OAASC,IAAT,CAAeC,GAAf,KAA0B,oBAA1B,CACA,OAASC,KAAT,KAAsB,mCAAtB,CAEA,OAASC,oBAAT,CAA+BC,oBAA/B,KAA2D,2BAA3D,CAEA,MAAO,SAAUN,CAAAA,iBAAV,CAA4BO,OAA5B,yJAECA,OAAO,CAACC,IAAR,CAAaC,SAAb,CAAyB,CAAzB,CAFD,gBAGkB,MAAMP,CAAAA,IAAI,CAACG,oBAAD,CAAuBE,OAAO,CAACC,IAA/B,CAAV,CAHlB,OAGOE,QAHP,oBAIKA,QAAQ,CAACC,MAAT,EAAmB,GAJxB,2CAKK,MAAMR,CAAAA,GAAG,CAAC,CAACS,IAAI,CAAER,KAAK,CAACS,sBAAb,CAAqCL,IAAI,CAAEE,QAAQ,CAACF,IAApD,CAAD,CAAT,CALL,uDAOK,MAAML,CAAAA,GAAG,CAAC,CAACS,IAAI,CAAER,KAAK,CAACU,oBAAb,CAAmCN,IAAI,CAAEE,QAAzC,CAAD,CAAT,CAPL,yFAUCK,OAAO,CAACC,GAAR,cAVD,qEAYN,CAED,MAAO,SAAUf,CAAAA,iBAAV,CAA4BM,OAA5B,6JAECA,OAAO,CAACC,IAAR,CAAaS,iBAAb,CAAiC,CAAjC,CAFD,iBAGkB,MAAMf,CAAAA,IAAI,CAACI,oBAAD,CAAuBC,OAAO,CAACC,IAA/B,CAAV,CAHlB,OAGOE,QAHP,qBAIKA,QAAQ,CAACC,MAAT,EAAmB,GAJxB,6CAKK,MAAMR,CAAAA,GAAG,CAAC,CAACS,IAAI,CAAER,KAAK,CAACc,sBAAb,CAAqCV,IAAI,CAAEE,QAAQ,CAACF,IAApD,CAAD,CAAT,CALL,yDAOK,MAAML,CAAAA,GAAG,CAAC,CAACS,IAAI,CAAER,KAAK,CAACe,oBAAb,CAAmCX,IAAI,CAAEE,QAAzC,CAAD,CAAT,CAPL,6FAUCK,OAAO,CAACC,GAAR,eAVD,uEAYN","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { ADMIN } from '../redux-constants/adminConstants';\n\nimport { createJobPostService, createPartnerService } from '../services/admin.service';\n\nexport function* createJobPostSaga(request) {\n    try {\n        request.data.partnerId = 1;\n        const response = yield call(createJobPostService, request.data);\n        if (response.status == 200) {\n            yield put({type: ADMIN.CREATE_JOBPOST_SUCCESS, data: response.data});\n        } else {\n            yield put({type: ADMIN.CREATE_JOBPOST_ERROR, data: response});\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport function* createPartnerSaga(request) {\n    try {\n        request.data.applicationStatus = 0;\n        const response = yield call(createPartnerService, request.data);\n        if (response.status == 200) {\n            yield put({type: ADMIN.CREATE_PARTNER_SUCCESS, data: response.data});\n        } else {\n            yield put({type: ADMIN.CREATE_PARTNER_ERROR, data: response});\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}